{"version":3,"sources":["typed-components.ts","theme.ts","Components/Table/Table.tsx","Components/Table/index.tsx","Components/Input/Input.tsx","Components/Input/index.tsx","Components/Form/Form.tsx","Components/Form/index.tsx","Components/Button/Button.tsx","Components/Button/index.tsx","Routes/Home/HomePresenter.tsx","Routes/Home/HomeContainer.tsx","Routes/Home/index.tsx","App.tsx","global-styles.ts","index.tsx"],"names":["styled","default","createGlobalStyle","ThemeProvider","theme","addColor","updateColor","addActiveColor","updateActiveColor","Container","div","UserTable","table","Table","users","handleEditClick","handleDeleteClick","length","colSpan","map","user","key","Fragment","name","userName","onClick","e","id","input","Input","type","disabled","onChange","required","value","placeholder","className","autoComplete","form","Form","submitFn","children","onSubmit","preventDefault","Button","Wrapper","Box","Title","h1","SubTitle","h2","InputExtended","ButtonExtended","props","formType","ButtonExtendedCancel","Text","h5","HomePresenter","onInputChange","onCancelBtn","Home","initialUserData","useState","setFormType","setUsers","setUser","useEffect","console","log","event","target","addUser","currentUser","data","postUsers","push","AppPresenter","to","exact","component","from","App","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d40e144a.chunk.js","sourcesContent":["import * as StyleThings from \"styled-components\";\r\nimport { ThemedStyledComponentsModule } from \"styled-components\";\r\n\r\ninterface IProps {\r\n    addColor: string;\r\n    updateColor: string;\r\n    addActiveColor: string;\r\n    updateActiveColor: string;\r\n}\r\n\r\nconst {\r\n    default: styled,\r\n    createGlobalStyle,\r\n    ThemeProvider\r\n} = StyleThings as ThemedStyledComponentsModule<IProps>;\r\n\r\nexport { createGlobalStyle, ThemeProvider };\r\nexport default styled;","const theme = {\r\n    addColor: \"#03a9f4\",\r\n    updateColor: \"#009688\",\r\n    addActiveColor: \"#3f51b5\",\r\n    updateActiveColor: \"#0c8075\"\r\n};\r\n\r\nexport default theme;","import React from \"react\";\r\nimport styled from \"../../typed-components\";\r\n\r\nconst Container = styled.div`\r\n    \r\n`;\r\nconst UserTable = styled.table`\r\n    width: 100%;\r\n    margin:0 auto;\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n    tr {\r\n        border-bottom: 1px solid #dfdfdf;\r\n    }\r\n    th, td{\r\n        text-align: center;\r\n        padding: 10px;\r\n    }\r\n`;\r\ninterface IUser {\r\n    id: number;\r\n    name: string;\r\n    userName: string;\r\n}\r\n\r\ninterface IProps {\r\n    users: IUser[];\r\n    handleEditClick: (data: IUser) => any;\r\n    handleDeleteClick: (id: number) => any;\r\n}\r\n\r\nconst Table: React.FC<IProps> = ({\r\n    users,\r\n    handleEditClick,\r\n    handleDeleteClick\r\n}) => {\r\n    return (\r\n        <Container>\r\n            <UserTable>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Username</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.length === 0 && (\r\n                            <tr>\r\n                                <td colSpan={3}>No data.</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    {\r\n                        users.length !== 0 && (\r\n                            users.map((user: IUser, key) => (\r\n                                <React.Fragment key={key}>\r\n                                        <tr>\r\n                                            <td>{ user.name }</td>\r\n                                            <td>{ user.userName }</td>\r\n                                            <td>\r\n                                            <button onClick={e => {handleEditClick(user); }}>Edit</button>\r\n                                            <button onClick={e => {handleDeleteClick(user.id)}}>Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                </React.Fragment>))\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </UserTable>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Table;","import Table from \"./Table\";\r\n\r\nexport default Table;","import React, { ChangeEventHandler } from \"react\";\r\nimport styled from \"../../typed-components\";\r\n\r\nconst Container = styled.input`\r\n    border: 1px solid #dfdfdf;\r\n    padding: 5px 10px;\r\n    border-radius: 6px;\r\n    box-sizing: border-box;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\ninterface IProps {\r\n    type?: string;\r\n    disabled?: boolean;\r\n    onChange?: any;\r\n    required?: boolean;\r\n    value?: string;\r\n    placeholder?: string;\r\n    name?: string;\r\n    className?: string;\r\n}\r\n\r\nconst Input: React.FC<IProps> = ({\r\n    type=\"text\",\r\n    disabled=false,\r\n    onChange,\r\n    required=true,\r\n    value=\"\",\r\n    placeholder=\"\",\r\n    name=\"\",\r\n    className\r\n}) => (\r\n    <Container\r\n        type={type}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        required={required}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        className={className}\r\n        autoComplete={\"off\"}\r\n    />\r\n);\r\n\r\nexport default Input;","import Input from \"./Input\";\r\nexport default Input;","import React, { FormEvent, Children } from \"react\";\r\nimport styled from \"../../typed-components\";\r\n\r\nconst Container = styled.form`\r\n\r\n`\r\ninterface IProps {\r\n    submitFn: any;\r\n}\r\n\r\nconst Form: React.FC<IProps> = ({\r\n    submitFn,\r\n    children\r\n}) => (\r\n    <Container  onSubmit={e => {e.preventDefault(); submitFn();}}>\r\n        { children }\r\n    </Container>\r\n);\r\n\r\nexport default Form;","import Form from \"./Form\";\r\nexport default Form;","import React from \"react\";\r\nimport styled from \"../../typed-components\";\r\n\r\nconst Container = styled.input`\r\n    background-color: black;\r\n    color: white;\r\n    outline: none;\r\n    border: 0;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    padding: 5px 12px;\r\n    font-size: 18px;\r\n    &:active {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\ninterface IProps {\r\n    value: string;\r\n    className: string;\r\n    onClick?: (data: any) => void;\r\n}\r\nconst Button: React.FC<IProps> = ({\r\n    value,\r\n    className,\r\n    onClick\r\n}) => <Container\r\n    value={value}\r\n    type={\"submit\"}\r\n    className={className}\r\n    onClick={onClick}\r\n    />;\r\n\r\nexport default Button;","import Button from \"./Button\";\r\nexport default Button;","import React from \"react\";\r\nimport styled from \"../../typed-components\";\r\nimport Table from \"../../Components/Table\";\r\nimport Input from \"../../Components/Input\";\r\nimport Form from \"../../Components/Form\";\r\nimport Button from \"../../Components/Button\";\r\n\r\nconst Container = styled.div`\r\n    padding: 30px;\r\n    @media(max-width: 800px) {\r\n        padding: 10px;\r\n    }\r\n`;\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    margin: 0 auto;\r\n    @media(max-width: 800px) {\r\n        flex-flow: column-reverse ;\r\n    }\r\n`;\r\nconst Box = styled.div`\r\n    flex: 1;\r\n    max-width: 49%;\r\n    @media(max-width: 800px) {\r\n        max-width: 100%;\r\n    }\r\n`;\r\nconst Title = styled.h1``;\r\nconst SubTitle = styled.h2`\r\n    @media(max-width: 400px) {\r\n        position: relative;\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n            right: 0;\r\n            width: 200px;\r\n            height: 3px;\r\n            background-color: #060404;\r\n        }\r\n    }\r\n`;\r\nconst InputExtended = styled(Input)`\r\n    width: 100%;\r\n    font-size: 17px;\r\n    padding: 15px 20px;\r\n`;\r\ninterface IButton {\r\n    formType: string\r\n}\r\nconst ButtonExtended = styled(Button)<IButton>`\r\n    background-color: ${props => props.formType === \"add\" ? props.theme.addColor : props.theme.updateColor};\r\n    margin-top: 10px;\r\n    width: 200px;\r\n    height: 40px;\r\n    &:hover {\r\n        background-color: ${props => props.formType === \"add\" ? props.theme.addActiveColor : props.theme.updateActiveColor};\r\n    }\r\n`;\r\n\r\nconst ButtonExtendedCancel = styled(Button)<IButton>`\r\n    margin-left: 10px;\r\n    visibility: ${props => props.formType === \"add\" ? \"hidden\" : \"visible\"};\r\n    width: 100px;\r\n    height: 40px;\r\n    background-color: white;\r\n    color: #424242;\r\n    border: 1px solid #dfdfdf;\r\n    &:hover {\r\n        background-color: black;\r\n        color: white;\r\n    }\r\n`;\r\nconst Text = styled.h5`\r\n    font-size: 20px;\r\n    margin: 5px 0;    \r\n`;\r\n\r\ninterface IUser {\r\n    id: number | any;\r\n    name: string;\r\n    userName: string;\r\n}\r\ninterface IProps {\r\n    user: IUser;\r\n    users: IUser[];\r\n    onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\r\n    handleEditClick: (data: IUser) => void;\r\n    handleDeleteClick: (id: number) => void;\r\n    formType: string;\r\n    onCancelBtn: (data: any) => any;\r\n};\r\nconst HomePresenter:React.FC<IProps> = ({\r\n    user,\r\n    users,\r\n    onInputChange,\r\n    onSubmit,\r\n    handleEditClick,\r\n    formType,\r\n    onCancelBtn,\r\n    handleDeleteClick\r\n}) => {\r\n       \r\n        return (\r\n        <Container>\r\n            <Title>CRUD REACT HOOKS</Title>\r\n            <Wrapper>\r\n                <Box>\r\n                    <SubTitle>{formType === \"add\" ? \"Add user\" : \"Edit user\"}</SubTitle>\r\n                    <Form submitFn={onSubmit}>\r\n                        <Text>Name</Text>\r\n                        <InputExtended \r\n                            placeholder={\"Input name\"}\r\n                            value={user.name}\r\n                            name={\"name\"}\r\n                            onChange={onInputChange}\r\n                        />\r\n                        <Text>Username</Text>\r\n                        <InputExtended \r\n                            placeholder={\"Input Username\"}\r\n                            value={user.userName}\r\n                            name={\"userName\"}\r\n                            onChange={onInputChange}\r\n                        />\r\n                        <ButtonExtended \r\n                            value={formType === \"add\" ? \"Add new user\" : \"Update user\"}\r\n                            formType={formType}\r\n                            className={\"submit-btn\"}\r\n                        />\r\n                        <ButtonExtendedCancel\r\n                            value={\"Cancel\"}\r\n                            formType={formType}\r\n                            className={\"cancel-btn\"}\r\n                            onClick={onCancelBtn}\r\n                        />\r\n\r\n                    </Form>\r\n                </Box>\r\n                <Box>\r\n                    <SubTitle>View users</SubTitle>\r\n                    <Table \r\n                        users={users}\r\n                        handleEditClick={handleEditClick}\r\n                        handleDeleteClick={handleDeleteClick}\r\n                    />\r\n                </Box>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default HomePresenter;","import React, { useState, useEffect } from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\ninterface IUser {\r\n    id: number;\r\n    name: string;\r\n    userName: string;\r\n}\r\n\r\nconst HomeContainer = () => {\r\n    const userData: IUser[] = [\r\n        { id: 0, name: \"김광훈\", userName: \"KKH\" },\r\n        { id: 1, name: \"이광연\", userName: \"LKY\" },\r\n        { id: 2, name: \"황영서\", userName: \"HYS\" },\r\n        { id: 3, name: \"김수빈\", userName: \"KSB\" }\r\n    ];\r\n    const initialUserData: IUser = {\r\n        id: 0, name: \"\", userName: \"\"\r\n    };\r\n    const [ formType, setFormType ] = useState(\"add\");\r\n    const [ users, setUsers ] = useState(userData);\r\n    const [ user, setUser ] = useState(initialUserData);\r\n\r\n    const addUser = (user: IUser) => {\r\n        user.id = users.length;\r\n        setUsers([\r\n            ...users,\r\n            user\r\n        ]);\r\n    }\r\n\r\n    const onInputChange: React.ChangeEventHandler<HTMLInputElement> = event => {\r\n        const { target: { name, value }} = event;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        });\r\n    }\r\n    const handleEditClick = (data: IUser) => {\r\n        const { id, name, userName } = data;\r\n        setUser({\r\n            id,\r\n            name,\r\n            userName\r\n        });\r\n        setFormType(\"edit\");\r\n    }\r\n    const handleDeleteClick = (id: number) => {\r\n        console.log(id);\r\n        var postUsers: IUser[] = [];\r\n        users.map(user => {\r\n            if(user.id !== id) {\r\n                postUsers.push(user);\r\n            }\r\n        });\r\n        console.log(users);\r\n        setUsers([\r\n            ...postUsers\r\n        ]);\r\n    }\r\n    const onSubmit: React.FormEventHandler<HTMLFormElement> = () => {\r\n        if(formType === \"add\") {\r\n            addUser(user);\r\n            console.log(\"add\");\r\n        } else if(formType === \"edit\") {\r\n            users.map((currentUser: IUser) => {\r\n                if(currentUser.id === user.id) {\r\n                    currentUser.name = user.name;\r\n                    currentUser.userName = user.userName;\r\n                }\r\n                console.log(\"edit\");\r\n                return currentUser;\r\n            });\r\n            setUsers([\r\n                ...users\r\n            ]);\r\n            setFormType(\"add\");\r\n        }\r\n\r\n        setUser({\r\n            ...initialUserData\r\n        });\r\n    }\r\n    const onCancelBtn = (event) => {\r\n        event.preventDefault();\r\n        setFormType(\"add\");\r\n        setUser({\r\n            ...initialUserData\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect\");\r\n        return () => {\r\n            console.log(\"useEffect After\");\r\n        }\r\n    })\r\n    \r\n    return <HomePresenter \r\n    user={user}\r\n    users={users}\r\n    onInputChange={onInputChange}\r\n    onSubmit={onSubmit}\r\n    handleEditClick={handleEditClick}\r\n    handleDeleteClick={handleDeleteClick}\r\n    formType={formType}\r\n    onCancelBtn={onCancelBtn}\r\n    />\r\n}\r\n\r\nexport default HomeContainer;","import Home from \"./HomeContainer\";\r\nexport default Home;","import React from \"react\";\nimport { ThemeProvider } from \"./typed-components\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport Home from \"./Routes/Home\";\n\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <BrowserRouter>\n      <AppPresenter />\n    </BrowserRouter>\n  </ThemeProvider>\n);\n\nconst AppPresenter = () => (\n    <Switch>\n      <Route to={\"/\"} exact={true} component={Home} />\n      <Redirect to={\"*\"} from={\"/\"}/>\n    </Switch>\n);\n\nexport default App;","import { createGlobalStyle } from \"./typed-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    html, body {\r\n        font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;   \r\n        margin: 0\r\n        padding: 0;\r\n    }\r\n    ul, li, a {\r\n        padding: 0;\r\n        margin: 0;\r\n        list-style: none;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        list-style: none;\r\n        color: inherit;\r\n    }\r\n`;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalStyles } from \"./global-styles\";\n\nReactDOM.render(\n<React.Fragment>\n    <App />\n    <GlobalStyles/>\n</React.Fragment>    \n, document.getElementById('root'));"],"sourceRoot":""}